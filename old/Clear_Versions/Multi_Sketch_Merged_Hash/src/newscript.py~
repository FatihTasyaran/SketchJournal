import os, sys ,subprocess, math
import csv

our_exec = sys.argv[1] ## Executable name 
ssz      = sys.argv[2] ## Super set size
sz       = sys.argv[3] ## Set size
col      = sys.argv[4] ## Column size
row      = sys.argv[5] ## Row size
maxt     = sys.argv[6] ## Max threads
dist     = sys.argv[7] ## Distribution
repeat   = sys.argv[8]
name_var = sys.argv[9]

##CASTINGS##
repeat = int(repeat)
maxt_int = int(maxt)
##CASTINGS##

##CALCULATIONS##
num_rounds = math.log(maxt_int, 2) + 1
num_rounds = int(num_rounds)
##CALCULATIONS

##CSV
filename = "multiple_tables.csv"
header = "TAKE, 1THR, 2THR, 4THR, 8THR, 16THR"
with open(filename, 'w') as fp:
    csv_writer = csv.writer(fp)
    csv_writer.writerows(header)
    header = " "
    csv_writer.writerows(header)
#CSV    

col_sizes = ['0.01', '0.001', '0.0001', '0.00001']

time_array_naive = [[] for i in range(repeat)]
through_array_naive = [[] for i in range(repeat)]
err_array_naive = [[] for i in range(repeat)]

time_array_merged = [[] for i in range(repeat)]
through_array_merged = [[] for i in range(repeat)]
err_array_merged = [[] for i in range(repeat)]

time_array_cont = []
through_array_cont = []
err_array_cont = []

print(time_array_naive)
print(time_array_naive[0])


def oneDance(op):
    ##NEBULA/GANDALF##
    time1beg = op.find("time:")
    time1beg += 5 ##omit "time"
    time1end = op.find("through", time1beg+1, len(op))
    time1end -= 2 ##omit "\t"
    time1 = op[time1beg:time1end]
    time_array_cont.append(time1)
    print(time1, 'added to contemporary array')
    
    through1beg = time1end + 10 ##omit "through"
    through1end = op.find("error", through1beg+1, len(op))
    through1end -= 2 ##omit "\t"
    through1 = op[through1beg:through1end]
    through_array_cont.append(through1)
    print(through1, 'added to contemporary array')
    
    error1beg = through1end + 8 ##omit "error"
    error1end = op.find("top_item", error1beg+1, len(op))
    error1end -= 2 ##omit "\t"
    error1 = op[error1beg:error1end]
    err_array_cont.append(error1)
    print(error1, 'added to contemporary array')
    
    return error1end


for c in range(0, len(col_sizes)):
    header = "C,O,L,S,I,Z,E,:,"
    header += col_sizes[c]
    with open(filename, 'w') as fp:
        csv_writer = csv.writer(fp)
        csv_writer.writerows(header)
    for re in range(0, repeat):
        op = subprocess.check_output([our_exec, ssz, sz, col_sizes[c], row, maxt, dist])
        op = str(op)
        
        for i in range(0, num_rounds): ## For each thread, for first version
            last = oneDance(op)
            op = op[last:len(op)]
            print(op)
            
            time_array_naive[re].append(time_array_cont)
            through_array_naive[re].append(through_array_cont)
            err_array_naive[re].append(err_array_cont)
            
            time_array_cont = []
            through_array_cont = []
            err_array_cont = []
            
            for i in range(0, num_rounds): ## For each thread, for seconds version
                last = oneDance(op)
                op = op[last:len(op)]
                print(op)
                
                time_array_merged[re].append(time_array_cont)
                through_array_merged[re].append(through_array_cont)
                err_array_merged[re].append(err_array_cont)
                
                time_array_cont = []
                through_array_cont = []
                err_array_cont = []

                with open(filename, 'w') as fp:
                    csv_writer = csv.writer(fp)
                    header = "N,A,I,V,E"
                    csv_writer.writerows(header)
                
print(time_array_naive)
print(time_array_merged)
                
                
        

        
        
        
